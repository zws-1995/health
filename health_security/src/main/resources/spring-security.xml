<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://code.alibabatech.com/schema/dubbo
						http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
                          http://www.springframework.org/schema/security
                          http://www.springframework.org/schema/security/spring-security.xsd">

    <security:http security="none" pattern="/login.html"></security:http>

    <security:http auto-config="true" use-expressions="true">
        <!--<security:intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"/>-->
        <!--只要认证通过就能访问-->
        <security:intercept-url pattern="/a.html" access="isAuthenticated()"></security:intercept-url>
        <!--必须有add权限才能访问-->
        <security:intercept-url pattern="/b.html" access="hasAuthority('add')"></security:intercept-url>
        <!--必须有ROLE_ADMIN角色才能访问-->
        <security:intercept-url pattern="/c.html" access="hasRole('ROLE_MANAGER')"></security:intercept-url>
        <!--ADMIN就相当于ROLE_MANAGER，框架会自动添加前缀，只有此处可以省略，java代码中不能省略-->
        <security:intercept-url pattern="/d.html" access="hasRole('ADMIN')"></security:intercept-url>

        <security:form-login login-page="/login.html"
                             username-parameter="username"
                             password-parameter="password"
                             login-processing-url="/login.do"
                             default-target-url="/index.html"
                             always-use-default-target="true"
                             authentication-failure-url="/login.html"></security:form-login>

        <!--
            logout:退出登录
            logout-url:退出登陆操作对应的请求路径
            logout-success-url:退出登录后的跳转页面

            invalidate-session:清空session（是Security中的session，不是HttpSession）
        -->
        <security:logout logout-url="/logout.do" logout-success-url="/login.html" invalidate-session="true"/>

        <security:csrf disabled="true"/>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="securityUserService">
            <security:password-encoder ref="passwordEncoding"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>
    <!--<bean id="securityUserService" class="com.itheima.demo.SecurityUserService"/>-->
    <context:component-scan base-package="com.itheima"></context:component-scan>

    <bean id="passwordEncoding" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--开启注解方式权限控制-->
    <security:global-method-security pre-post-annotations="enabled"/>


</beans>